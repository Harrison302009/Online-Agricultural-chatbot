datasource db {
    provider = "postgresql"
    url      = env("POSTGRES_PRISMA_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id              String        @id @default(cuid())
    name            String?
    email           String?       @unique
    password        String?
    username        String?       @unique
    lastLogin       DateTime      @default(now())
    phoneNumber     String?
    country         String        @default("Unknown")
    address         String        @default("Unknown")
    role            String        @default("user")
    status          String        @default("offline")
    isBanned        Boolean       @default(false)
    plan            String        @default("new")
    receivedMessage Boolean       @default(false)
    emailVerified   DateTime?
    image           String?
    accounts        Account[]
    sessions        Session[]
    Message         Message[]
    ChatMessage     ChatMessage[]
    MessageSent     MessageSent[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

// Application models
model Message {
    id        String    @id @default(cuid())
    content   String
    createdAt DateTime  @default(now())
    updatedAt DateTime? @updatedAt
    ownerId   String?
    owner     User?     @relation(fields: [ownerId], references: [id])
}

model ChatMessage {
    id        Int      @id @default(autoincrement())
    message   String
    image     String?
    createdAt DateTime @default(now())
    ownerId   String?
    owner     User?    @relation(fields: [ownerId], references: [id])
}

model MessageSent {
    id        Int      @id @default(autoincrement())
    message   String
    image     String?
    sent      Boolean  @default(false)
    createdAt DateTime @default(now())
    ownerId   String?
    owner     User?    @relation(fields: [ownerId], references: [id])
}

model RegisteredUsers {
    email    String  @id @unique @default("test@example.com")
    password String?
}
